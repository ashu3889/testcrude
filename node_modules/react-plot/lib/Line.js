'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

var Line = function Line(_ref) {
	var width = _ref.width,
	    height = _ref.height,
	    positions = _ref.positions,
	    _ref$color = _ref.color,
	    color = _ref$color === undefined ? '#000' : _ref$color,
	    _ref$thickness = _ref.thickness,
	    thickness = _ref$thickness === undefined ? 1 : _ref$thickness;

	var direction = [!!positions.length ? 'M' : ''].concat(_toConsumableArray(positions.map(function (_ref2) {
		var _ref3 = _slicedToArray(_ref2, 2),
		    x = _ref3[0],
		    y = _ref3[1];

		return x + ' ' + (height - y);
	}).map(function (dataPoint, i) {
		var isLast = i === positions.length - 1;

		return !isLast ? dataPoint + ' L' : '' + dataPoint;
	}))).join(' ');

	return _react2.default.createElement(
		'g',
		null,
		_react2.default.createElement('path', {
			d: direction,
			fill: 'none',
			strokeLinecap: 'round',
			stroke: color,
			strokeWidth: thickness
		})
	);
};

exports.default = Line;